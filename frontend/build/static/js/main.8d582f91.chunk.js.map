{"version":3,"sources":["secrets.js","keys.js","util/route_util.js","util/session_api_util.js","actions/session_actions.js","components/nav/navbar.js","components/nav/navbar_container.js","components/main/main_page.js","components/session/login_form.js","components/session/login_form_container.js","components/session/signup_form.js","components/session/signup_form_container.js","components/map/map.jsx","components/map/map_container.jsx","components/app.js","components/root.js","reducers/session_reducer.js","reducers/session_errors_reducer.js","reducers/errors_reducer.js","reducers/root_reducer.js","store/store.js","index.js"],"names":["process","mongoURI","secretOrKey","googleMapKey","console","log","module","exports","require","mapStateToProps","state","loggedIn","session","isAuthenticated","AuthRoute","withRouter","connect","Component","component","path","exact","render","props","to","rest","setAuthToken","token","axios","defaults","headers","common","receiveCurrentUser","currentUser","type","receiveErrors","errors","signup","user","dispatch","userData","post","then","res","data","localStorage","setItem","APIUtil","decoded","jwt_decode","err","response","login","catch","logout","removeItem","NavBar","logoutUser","bind","getLinks","e","preventDefault","this","onClick","React","MainPage","LoginForm","email","password","handleSubmit","renderErrors","nextProps","history","push","setState","field","currentTarget","value","Object","keys","map","error","i","key","onSubmit","onChange","update","placeholder","SignupForm","handle","password2","clearedErrors","signedIn","className","isSignedIn","mapKey","Map","bootstrapURLKeys","defaultCenter","center","defaultZoom","zoom","defaultProps","lat","lng","ownProps","App","MapContainer","LoginFormContainer","SignupFormContainer","Root","store","initialState","_nullErrors","SessionErrorsReducer","action","freeze","combineReducers","RootReducer","undefined","configureStore","preloadedState","createStore","rootReducer","applyMiddleware","thunk","logger","document","addEventListener","jwtToken","decodedUser","currentTime","Date","now","exp","window","location","href","root","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.8d582f91.chunk.js","sourcesContent":["const {mongoURI, secretOrKey, googleMapKey} = process.env;\n\nif (mongoURI) {\n    console.log('secrets from env, we\\'re in heroku!');\n    module.exports = {mongoURI, secretOrKey, googleMapKey}\n} else {\n    console.log('secrets from local file, we\\'re in local!');\n    module.exports = require('./keys.js')\n}","module.exports = {\n    mongoURI: 'mongodb+srv://dev:UXh5kReX9QZ7r63k@cluster0.4dlx0.mongodb.net/db?retryWrites=true&w=majority',\n    secretOrKey: 'QRbvpOpohjeLXPYmNpKUKMKUulEac5wC',\n    googleMapKey: 'AIzaSyBXsdt7pBaD-tiMFIksB9ctNs-t7CxRB20'\n  }","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\n\n// Passed in from parent component or from mapStateToProps\nconst Auth = ({ component: Component, path, loggedIn, exact }) => (\n  <Route path={path} exact={exact} render={(props) => (\n    !loggedIn ? (\n      <Component {...props} />\n    ) : (\n        // Redirect to the tweets page if the user is authenticated\n      <Redirect to=\"/dash\" />\n    )\n  )} />\n);\n\nconst Protected = ({ component: Component, loggedIn, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      loggedIn ? (\n        <Component {...props} />\n      ) : (\n        // Redirect to the login page if the user is already authenticated\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\n// Use the isAuthenitcated slice of state to determine whether a user is logged in\n\nconst mapStateToProps = state => (\n  {loggedIn: state.session.isAuthenticated}\n);\n\nexport const AuthRoute = withRouter(connect(mapStateToProps)(Auth));\n\nexport const ProtectedRoute = withRouter(connect(mapStateToProps)(Protected));","import axios from 'axios';\n\nexport const setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = token;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport const signup = (userData) => {\n    return axios.post('/api/users/register', userData);\n  };\n\nexport const login = (userData) => {\n    return axios.post('/api/users/login', userData);\n  };","// src/actions/session_actions.js\n\n// Although there's only one function here so far, let's import the whole file since we will be adding more later\nimport * as APIUtil from '../util/session_api_util';\nimport jwt_decode from 'jwt-decode';\n\n// This pattern should be familiar to you from the full stack project\n\nexport const RECEIVE_CURRENT_USER = \"RECEIVE_CURRENT_USER\";\nexport const RECEIVE_SESSION_ERRORS = \"RECEIVE_SESSION_ERRORS\";\nexport const RECEIVE_USER_LOGOUT = \"RECEIVE_USER_LOGOUT\";\nexport const RECEIVE_USER_SIGN_IN = \"RECEIVE_USER_SIGN_IN\";\n\n\n// We'll dispatch this when our user signs in\nexport const receiveCurrentUser = currentUser => ({\n    type: RECEIVE_CURRENT_USER,\n    currentUser\n});\n\n// This will be used to redirect the user to the login page upon signup\nexport const receiveUserSignIn = () => ({\n    type: RECEIVE_USER_SIGN_IN\n});\n  \n// We dispatch this one to show authentication errors on the frontend\nexport const receiveErrors = errors => ({\n    type: RECEIVE_SESSION_ERRORS,\n    errors\n});\n\n// When our user is logged out, we will dispatch this action to set isAuthenticated to false\nexport const logoutUser = () => ({\n    type: RECEIVE_USER_LOGOUT\n});\n\n// Upon signup, dispatch the approporiate action depending on which type of response we receieve from the backend\nexport const signup = user => dispatch => (\n    APIUtil.signup(user).then((res) => {\n        // !!!! the part below did not work. it creates a user but did not log them in\n        // console.log('signup resolved to ', x)\n        // return dispatch(receiveUserSignIn())\n        // !!!! i replaced it with login part\n\n        const { token } = res.data;\n        localStorage.setItem('jwtToken', token);\n        APIUtil.setAuthToken(token);\n        const decoded = jwt_decode(token);\n        dispatch(receiveCurrentUser(decoded))\n\n    }, err => (\n        dispatch(receiveErrors(err.response.data))\n    ))\n);\n\n// Upon login, set the session token and dispatch the current user. Dispatch errors on failure.\nexport const login = user => dispatch => (\n    APIUtil.login(user).then(res => {\n        const { token } = res.data;\n        localStorage.setItem('jwtToken', token);\n        APIUtil.setAuthToken(token);\n        const decoded = jwt_decode(token);\n        dispatch(receiveCurrentUser(decoded))\n    })\n    .catch(err => {\n        dispatch(receiveErrors(err.response.data));\n    })\n)\n\n// We wrote this one earlier\nexport const logout = () => dispatch => {\n    localStorage.removeItem('jwtToken')\n    APIUtil.setAuthToken(false)\n    dispatch(logoutUser())\n};","import React from 'react';\nimport { Link } from 'react-router-dom'\n// import './navbar.css'\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.logoutUser = this.logoutUser.bind(this);\n    this.getLinks = this.getLinks.bind(this);\n  }\n\n  logoutUser(e) {\n      e.preventDefault();\n      this.props.logout();\n  }\n\n  // Selectively render links dependent on whether the user is logged in\n  getLinks() {\n      if (this.props.loggedIn) {\n        return (\n            <div>\n                {/* <Link to={'/tweets'}>All Tweets</Link>\n                <Link to={'/profile'}>Profile</Link>\n                <Link to={'/new_tweet'}>Write a Tweet</Link> */}\n                <button onClick={this.logoutUser}>Logout</button>\n            </div>\n        );\n      } else {\n        return (\n            <div>\n                <Link to={'/signup'}>Signup</Link>\n                <Link to={'/login'}>Login</Link>\n            </div>\n        );\n      }\n  }\n\n  render() {\n      return (\n        <div>\n            <h1>Save the Date</h1>\n            { this.getLinks() }\n        </div>\n      );\n  }\n}\n\nexport default NavBar;","import { connect } from 'react-redux';\nimport { logout } from '../../actions/session_actions';\n\nimport NavBar from './navbar';\n\nconst mapStateToProps = state => ({\n  loggedIn: state.session.isAuthenticated\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(NavBar);","import React from 'react';\n\nclass MainPage extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <h1>Save The Date</h1>\n        <footer>\n          Copyright &copy; 2020 Save The Date\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n  }\n\n  // Once the user has been authenticated, redirect to the Tweets page\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentUser === true) {\n      this.props.history.push('/dash');\n    }\n\n    // Set or clear errors\n    this.setState({errors: nextProps.errors})\n  }\n\n  // Handle field updates (called in the render method)\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  // Handle form submission\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.login(user); \n  }\n\n  // Render the session errors if there are any\n  renderErrors() {\n    return(\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n              <input type=\"text\"\n                value={this.state.email}\n                onChange={this.update('email')}\n                placeholder=\"Email\"\n              />\n            <br/>\n              <input type=\"password\"\n                value={this.state.password}\n                onChange={this.update('password')}\n                placeholder=\"Password\"\n              />\n            <br/>\n            <input type=\"submit\" value=\"Submit\" />\n            {this.renderErrors()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);","import { connect } from 'react-redux';\nimport { login } from '../../actions/session_actions';\nimport LoginForm from './login_form';\n\nconst mapStateToProps = (state) => {\n  return {\n    errors: state.errors.session\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: user => dispatch(login(user))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginForm);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      handle: '',\n      password: '',\n      password2: '',\n      errors: {}\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.clearedErrors = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.signedIn === true) {\n      this.props.history.push('/dash'); \n    }\n    console.log(this.state);\n    this.setState({errors: nextProps.errors});\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let user = {\n      email: this.state.email,\n      handle: this.state.handle,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.signup(user, this.props.history); \n  }\n\n  renderErrors() {\n    return(\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"signup-form-container\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"signup-form\">\n            <br/>\n              <input type=\"text\"\n                value={this.state.email}\n                onChange={this.update('email')}\n                placeholder=\"Email\"\n              />\n            <br/>\n              <input type=\"text\"\n                value={this.state.handle}\n                onChange={this.update('handle')}\n                placeholder=\"Handle\"\n              />\n            <br/>\n              <input type=\"password\"\n                value={this.state.password}\n                onChange={this.update('password')}\n                placeholder=\"Password\"\n              />\n            <br/>\n              <input type=\"password\"\n                value={this.state.password2}\n                onChange={this.update('password2')}\n                placeholder=\"Confirm Password\"\n              />\n            <br/>\n            <input type=\"submit\" value=\"Submit\" />\n            {this.renderErrors()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SignupForm);\n","import { connect } from 'react-redux';\nimport { signup } from '../../actions/session_actions';\nimport SignupForm from './signup_form';\n\nconst mapStateToProps = (state) => {\n  return {\n    signedIn: state.session.isSignedIn,\n    errors: state.errors.session\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signup: user => dispatch(signup(user))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignupForm);","import React from \"react\";\nimport GoogleMapsReact from 'google-maps-react';\nconst mapKey = require('../../secrets')\n\nclass Map extends React.Component {\n    constructor(props) {\n        super(props)\n        debugger\n    }\n\n    static defaultProps = {\n        center: {lat: 40.7678805, lng: -73.97103059999999}, \n        zoom: 13\n     }\n\n    render() {\n        debugger\n        return(\n            <div className = \".map-cont\">\n                <div>this should be a map</div>\n            <GoogleMapsReact\n                \n                bootstrapURLKeys={{\n                    key: mapKey\n                }}\n                defaultCenter={this.props.center}\n                // center={this.state.center}\n                defaultZoom={this.props.zoom}\n                \n                // onChildMouseEnter={this.onChildMouseEnter}\n                // onChildMouseLeave={this.onChildMouseLeave}\n            />\n            </div>\n        )\n    }\n}\n\nexport default Map;","import { connect } from 'react-redux';\nimport Map from './map';\n\nconst mapStateToProps = (state, ownProps) => {\n    debugger\n    return {\n        state: state\n    }\n}\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         smth: () => dipatch(smth())\n//     }\n// }\n\nexport default connect(mapStateToProps ,null)(Map);\n","import React from 'react';\nimport { AuthRoute, ProtectedRoute } from '../util/route_util';\nimport { Switch, Route } from 'react-router-dom';\nimport NavBarContainer from './nav/navbar_container';\n\nimport MainPage from './main/main_page';\nimport LoginFormContainer from './session/login_form_container';\nimport SignupFormContainer from './session/signup_form_container';\nimport MapContainer from './map/map_container';\n\n\nconst App = () => (\n  <div>\n    <NavBarContainer />\n    <Switch>\n        <AuthRoute exact path=\"/\" component={MainPage} />\n        <Route exact path=\"/dash\" component={MapContainer} />\n        <AuthRoute exact path=\"/login\" component={LoginFormContainer} />\n        <AuthRoute exact path=\"/signup\" component={SignupFormContainer} />\n    </Switch>\n  </div>\n);\n\nexport default App;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n// We'll create this soon\nimport App from './app';\n\nconst Root = ({ store }) => (\n  <Provider store={ store }>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nexport default Root;","import { RECEIVE_CURRENT_USER, \n    RECEIVE_USER_LOGOUT, \n    RECEIVE_USER_SIGN_IN } from '../actions/session_actions';\n\nconst initialState = {\nisAuthenticated: false,\nuser: {}\n};\n\nexport default function(state = initialState, action) {\nswitch (action.type) {\ncase RECEIVE_CURRENT_USER:\n return {\n   ...state,\n   isAuthenticated: !!action.currentUser,\n   user: action.currentUser\n };\ncase RECEIVE_USER_LOGOUT:\n return {\n   isAuthenticated: false,\n   user: undefined\n };\ncase RECEIVE_USER_SIGN_IN:\n return {\n   ...state,\n   isSignedIn: true\n }\ndefault:\n return state;\n}\n}","import {\n    RECEIVE_SESSION_ERRORS,\n    RECEIVE_CURRENT_USER,\n  } from '../actions/session_actions';\n  \n  const _nullErrors = [];\n  \n  const SessionErrorsReducer = (state = _nullErrors, action) => {\n    Object.freeze(state);\n    switch(action.type) {\n      case RECEIVE_SESSION_ERRORS:\n        return action.errors;\n      case RECEIVE_CURRENT_USER:\n        return _nullErrors;\n      default:\n        return state;\n    }\n  };\n  \n  export default SessionErrorsReducer;","import { combineReducers } from 'redux';\n\nimport SessionErrorsReducer from './session_errors_reducer';\n\nexport default combineReducers({\n  session: SessionErrorsReducer\n});","import { combineReducers } from 'redux';\nimport session from './session_reducer';\nimport errors from './errors_reducer'\n\nconst RootReducer = combineReducers({\n  session,\n  errors\n});\n\nexport default RootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport rootReducer from '../reducers/root_reducer';\n\nconst configureStore = (preloadedState = {}) => (\n  createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(thunk, logger)\n  )\n);\n\nexport default configureStore;","// src/index.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// We will create this component shortly\nimport Root from './components/root';\n\n// We set this up in the last section\nimport configureStore from './store/store';\n\n// We will use this to parse the user's session token\nimport jwt_decode from 'jwt-decode';\n\n// The session utility we just created\nimport { setAuthToken } from './util/session_api_util';\n\n// We have not created this action yet, but will do so in the next step\nimport { logout } from './actions/session_actions';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let store;\n\n  // If a returning user has a session token stored in localStorage\n  if (localStorage.jwtToken) {\n\n    // Set the token as a common header for all axios requests\n    setAuthToken(localStorage.jwtToken);\n\n    // Decode the token to obtain the user's information\n    const decodedUser = jwt_decode(localStorage.jwtToken);\n\n    // Create a preconfigured state we can immediately add to our store\n    const preloadedState = { session: { isAuthenticated: true, user: decodedUser } };\n\n    store = configureStore(preloadedState);\n\n    const currentTime = Date.now() / 1000;\n\n    // If the user's token has expired\n    if (decodedUser.exp < currentTime) {\n      // Logout the user and redirect to the login page\n      store.dispatch(logout());\n      window.location.href = '/login';\n    }\n  } else {\n    // If this is a first time user, start with an empty store\n    store = configureStore({});\n  }\n  // Render our root component and pass in the store as a prop\n  const root = document.getElementById('root');\n\n  ReactDOM.render(<Root store={store} />, root);\n});"],"sourceRoot":""}